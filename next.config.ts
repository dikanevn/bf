import { NextConfig } from 'next';

const config: NextConfig = {
  // ... existing code ...

  // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
  onError: (err: Error) => {
    console.error('üî¥ –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:');
    console.error(err.stack);
  },
  
  // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤ development
  typescript: {
    ignoreBuildErrors: false,
    tsconfigPath: './tsconfig.json'
  },

  // –í–∫–ª—é—á–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏—á–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –¥–µ–±–∞–≥–∞
  experimental: {
    // ... existing experimental options ...
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º development —Å–±–æ—Ä–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    allowDevelopmentBuild: process.env.NODE_ENV === 'development',
    
    // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ Fast Refresh
    optimizeFonts: true,
    scrollRestoration: true,
    
    // –í–∫–ª—é—á–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π –æ—à–∏–±–æ–∫
    webVitalsAttribution: ['CLS', 'LCP', 'FID', 'INP', 'TTFB'],
  },

  // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
  logging: {
    level: 'verbose',
    fullUrl: true
  }
};

export default config; 